public List<Edge> getUpwardEdgesByNode(Node node, Graph graph) {

    List<Edge> result = new ArrayList<>();

    Set<Node> visited = new HashSet<>();

    Set<Node> visitedTo = new HashSet<>(); //已经处理过的目标

    Queue<Node> queue = new LinkedList<>();

    visited.add(node);

    queue.offer(node);

    while (!queue.isEmpty()) {

        Node current = queue.poll();

        List<Edge> edges = graph.getEdgesByNodeFrom(current);

        for (Edge edge : edges) {

            Node next = edge.getFrom();

            Node to = edge.getTo();

            if (visitedTo.contains(next)) {

                continue;

            }

            result.add(edge);

            visitedTo.add(to);

            if (!visited.contains(next)) {

                visited.add(next);

                queue.offer(next);

            }

        }

    }

    return result;

}
